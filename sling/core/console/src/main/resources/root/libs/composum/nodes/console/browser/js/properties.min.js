var $jscomp={scope:{},findInternal:function(b,c,a){b instanceof String&&(b=String(b));for(var e=b.length,d=0;d<e;d++){var f=b[d];if(c.call(a,f,d,b))return{i:d,v:f}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(b,c,a){if(a.get||a.set)throw new TypeError("ES3 does not support getters and setters.");b!=Array.prototype&&b!=Object.prototype&&(b[c]=a.value)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(b,c,a,e){if(c){a=$jscomp.global;b=b.split(".");for(e=0;e<b.length-1;e++){var d=b[e];d in a||(a[d]={});a=a[d]}b=b[b.length-1];e=a[b];c=c(e);c!=e&&null!=c&&$jscomp.defineProperty(a,b,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.prototype.find",function(b){return b?b:function(b,a){return $jscomp.findInternal(this,b,a).v}},"es6-impl","es3");
(function(b){b.browser=b.browser||{};(function(c){c.getPropertiesTab=function(){return b.getView(".node-view-panel .properties",c.PropertiesTab)};c.PropertiesTab=b.console.DetailTab.extend({initialize:function(a){this.table=b.getWidget(this.$el,".table-container",c.PropertiesTable);this.$addButton=this.$(".table-toolbar .add");this.$addButton.click(_.bind(function(){c.openNewPropertyDialog(_.bind(this.reload,this))},this));this.$removeButton=this.$(".table-toolbar .remove");this.$removeButton.click(_.bind(this.removeSelection,
this));this.$copyButton=this.$(".table-toolbar .copy");this.$copyButton.click(_.bind(this.clipboardCopy,this));this.$pasteButton=this.$(".table-toolbar .paste");this.$pasteButton.click(_.bind(this.clipboardPaste,this))},reload:function(){this.table.loadContent()},clipboardCopy:function(a){a=this.table.getSelections();for(var e=c.getCurrentPath(),d=[],f=0;f<a.length;f++)d[f]=a[f].name;b.console.getProfile().set("properties","clipboard",{path:e,names:d})},clipboardPaste:function(a){var e=c.getCurrentPath();
a=b.console.getProfile().get("properties","clipboard");e&&a&&a.path&&a.names&&b.ajaxPut("/bin/cpm/nodes/property.copy.json"+e,JSON.stringify(a),{dataType:"json"},_.bind(function(a){$(document).trigger("path:changed",[e])},this),_.bind(function(a){b.alert("danger","Error","Error on copying properties",a)},this))},removeSelection:function(a){var e=c.getCurrentPath();a=this.table.getSelections();for(var d=[],f=0;f<a.length;f++)d[f]=a[f].name;e&&d&&b.ajaxDelete("/bin/cpm/nodes/property.remove.json"+e,
{data:JSON.stringify({names:d}),dataType:"json"},_.bind(function(a){$(document).trigger("path:changed",[e])},this),_.bind(function(a){b.alert("danger","Error","Error on removing properties",a)},this))}});c.PropertiesTable=Backbone.View.extend({initialize:function(a){this.state={load:!1,editable:!1};this.$table=this.$(".property-table");this.$table.bootstrapTable({search:!0,showToggle:!1,striped:!0,rowStyle:_.bind(function(a,b){return{classes:a["protected"]?"protected":"editable"}},this),columns:[{"class":"selection",
checkbox:!0,sortable:!1},{"class":"name",field:"name",title:"Name",searchable:!0,sortable:!0,width:"22%",formatter:function(a,b,c){return _.escape(a)}},{"class":"value",field:"value",title:"Value",formatter:_.bind(this.formatValue,this),searchable:!0,sortable:!1,width:"68%"},{"class":"multi",field:"multi",title:"Multi",searchable:!1,sortable:!1,width:"50px"},{"class":"type",field:"type",title:"Type",searchable:!1,sortable:!1,width:"150px"},{"class":"auto",field:"auto",title:"Auto",searchable:!1,sortable:!1,
width:"50px"}],onClickRow:_.bind(this.onClickRow,this)})},formatValue:function(a,e,d){d=e.type;_.isArray(a)&&(a=a.join(", "));a=_.escape(a);switch(d){case "Binary":if(e.multi)return'<a class="editable">'+a+"</a>";a=b.getContextUrl(a);return'<a href="'+a+'">download...</a>';default:return'<a class="editable">'+a+"</a>"}},getSelections:function(){return this.$table.bootstrapTable("getSelections")},onClickRow:function(a,b){if(!this.state.editable){var d=a.type,e=$(b.context);if("value"==e.attr("class")){var c=
b.find("a.editable");if(c&&0<c.length&&!c.hasClass("editable-click")){var d=this.editableTypes[d],g={mode:"inline",width:"100%",url:this.editableChange};d&&(d=a.multi?d.multi:d.single)&&(g=_.extend(g,d),e.addClass(d.type));c.editable(g);c.on("shown",_.bind(this.editableShown,this));c.on("hidden",_.bind(this.editableHidden,this));c.editable("toggle")}}else this.openEditDialog(a,b)}},editableTypes:{Boolean:{single:{type:"checkbox"}}},editableShown:function(){this.state.editable=!0},editableHidden:function(){setTimeout(_.bind(function(){this.state.editable=
!1},this),100)},editableChange:function(a){var e=$(this),d=b.getView(e.closest(".table-container"),c.PropertiesTable);d.state.load||(e=$(this).closest("tr"),(new c.Property({path:c.getCurrentPath(),name:e.find("td.name").text(),oldname:e.find("td.name").text(),type:e.find("td.type").text(),multi:"true"==e.find("td.multi").text(),value:a.value})).save(_.bind(function(a){$(document).trigger("path:changed",[c.getCurrentPath()])},d),_.bind(function(a){200!=a.status&&b.alert("danger","Error","Error on updating properties",
a);d.loadContent()},d)))},openEditDialog:function(a,e){if(!this.state.editable){var d=b.browser.getPropertyDialog();d.show(_.bind(function(){a?d.setProperty(new c.Property({path:c.getCurrentPath(),name:a.name,type:a.type,multi:a.multi,value:a.value})):d.setProperty(new c.Property({path:c.getCurrentPath()}))},this),_.bind(this.loadContent,this))}},loadContent:function(){var a=c.getCurrentPath();this.state.load=!0;b.getJson("/bin/cpm/nodes/property.map.json"+a,_.bind(function(a){this.$table.bootstrapTable("load",
a)},this),_.bind(function(a){b.alert("danger","Error","Error on loading properties",a)},this),_.bind(function(a){this.state.load=!1},this))}})})(b.browser)})(window.core);
