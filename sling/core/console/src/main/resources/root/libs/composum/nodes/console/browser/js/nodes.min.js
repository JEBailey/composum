var $jscomp={scope:{},findInternal:function(b,c,a){b instanceof String&&(b=String(b));for(var d=b.length,e=0;e<d;e++){var g=b[e];if(c.call(a,g,e,b))return{i:e,v:g}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(b,c,a){if(a.get||a.set)throw new TypeError("ES3 does not support getters and setters.");b!=Array.prototype&&b!=Object.prototype&&(b[c]=a.value)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(b,c,a,d){if(c){a=$jscomp.global;b=b.split(".");for(d=0;d<b.length-1;d++){var e=b[d];e in a||(a[e]={});a=a[e]}b=b[b.length-1];d=a[b];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(a,b,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.prototype.find",function(b){return b?b:function(b,a){return $jscomp.findInternal(this,b,a).v}},"es6-impl","es3");
(function(b){b.nodes=b.nodes||{};(function(c){c.getCreateNodeDialog=function(){return b.getView("#node-create-dialog",c.CreateNodeDialog)};c.getMoveNodeDialog=function(){return b.getView("#node-move-dialog",c.MoveNodeDialog)};c.getRenameNodeDialog=function(){return b.getView("#node-rename-dialog",c.RenameNodeDialog)};c.getCopyNodeDialog=function(){return b.getView("#node-copy-dialog",c.CopyNodeDialog)};c.getNodeMixinsDialog=function(){return b.getView("#node-mixins-dialog",c.NodeMixinsDialog)};c.getDeleteNodeDialog=
function(){return b.getView("#node-delete-dialog",c.DeleteNodeDialog)};c.getUploadNodeDialog=function(){return b.getView("#node-upload-dialog",c.UploadNodeDialog)};c.CreateNodeDialog=b.components.Dialog.extend({initialize:function(a){b.components.Dialog.prototype.initialize.apply(this,[a]);this.form=b.getWidget(this.el,"form.widget-form",b.components.FormWidget);this.$panel=this.$(".form-panel");this.$path=this.$('input[name="path"]');this.$type=this.$('input[name="type"]');this.$indexType=this.$('input[name="indexType"]');
this.$name=this.$('input[name="name"]');this.$file=this.$('input[name="file"]');this.$type.on("change.type",_.bind(this.typeChanged,this));this.$file.on("change.file",_.bind(this.fileChanged,this));this.form.onsubmit=_.bind(this.createNode,this);this.$("button.create").click(_.bind(this.createNode,this));this.$el.on("shown.bs.modal",function(){$(this).find('input[name="type"]').focus()})},initParentPath:function(a){this.$path.val(a)},createNode:function(a){a.preventDefault();var d=this.$path.val(),
e=this.$name.val(),c=b.buildContentPath(d,e);this.form.isValid()?this.submitForm(function(a){$(document).trigger("path:inserted",[d,e]);$(document).trigger("path:select",[c])}):this.alert("danger","a parent path, type and name must be specified");return!1},typeChanged:function(){var a=this.$type.val();a&&a.match(/(file|[Rr]esource)$/)?this.setTypeView("binary"):a&&a.match(/^oak:QueryIndexDefinition/)?this.setTypeView("index"):a&&!a.match(/^(nt|rep):/)?this.setTypeView("sling"):a&&a.match(/^(nt|sling):linked.*/)?
this.setTypeView("linked"):this.setTypeView("default")},setTypeView:function(a){this.$panel.removeClass("default binary sling linked index");this.$panel.addClass(a)},fileChanged:function(){var a=this.widgetOf(this.$file),b=this.widgetOf(this.$name);(a=a.getValue())&&!b.getValue()&&(a=/^(.*[\\\/])?([^\\\/]+)$/.exec(a),b.setValue([a[2]]))},reset:function(){b.components.Dialog.prototype.reset.apply(this);this.typeChanged()}});c.NodeMixinsDialog=b.components.Dialog.extend({initialize:function(a){b.components.Dialog.prototype.initialize.apply(this,
[a]);this.form=b.getWidget(this.el,"form.widget-form",b.components.FormWidget);this.$path=this.$('input[name="path"]');this.multi=b.getWidget(this.el,"div.multi-form-widget",b.components.MultiFormWidget);this.form.onsubmit=_.bind(this.saveNode,this);this.$("button.submit").click(_.bind(this.saveNode,this));this.$el.on("shown.bs.modal",function(){$(this).find('input[name="value"]').focus()})},reset:function(){b.components.Dialog.prototype.reset.apply(this)},setWidgetValue:function(a,d){var e=b.widgetOf(a,
this);e&&_.isFunction(e.setValue)?e.setValue(d):a.val(d)},setNode:function(a){this.$path.val(a.path);b.getJson("/bin/cpm/nodes/node.mixins.json"+a.path,_.bind(function(a){this.multi.reset(a.length);for(var b=this.multi.$('input[name="value"]'),d=0;d<a.length;d++)this.setWidgetValue($(b[d]),a[d])},this))},saveNode:function(a){a.preventDefault();a=function(a){for(var b=[],d=0;d<a.length;d++){var e=$(a[d]).val();""!=e&&(b[d]=e)}return b}(this.$('input[name="value"]'));var d=this.$path.val();b.ajaxPut("/bin/cpm/nodes/property.put.json"+
d,JSON.stringify({name:"jcr:mixinTypes",multi:!0,value:a,type:"Name"}),{dataType:"json"},_.bind(function(a){$(document).trigger("path:changed",[d]);this.hide()},this),_.bind(function(a){b.alert("danger","Error","Error on updating mixin entries",a)},this));return!1}});c.CopyNodeDialog=b.components.Dialog.extend({initialize:function(a){b.components.Dialog.prototype.initialize.apply(this,[a]);this.form=b.getWidget(this.el,"form.widget-form",b.components.FormWidget);this.path=b.getWidget(this.el,".path.path-widget",
b.components.PathWidget);this.$node=this.$('input[name="node"]');this.newname=b.getWidget(this.el,'input[name="newname"]',b.components.TextFieldWidget);this.$("button.copy").click(_.bind(this.copyNode,this));this.$el.on("shown.bs.modal",_.bind(function(){this.newname.focus();this.newname.selectAll()},this))},reset:function(){b.components.Dialog.prototype.reset.apply(this)},setNodePath:function(a){var d=b.getNameFromPath(a);this.newname.setValue(d);this.$node.val(a)},setTargetPath:function(a){this.path.setValue(a)},
copyNode:function(a){a.preventDefault();var d=this.path.getValue(),e=this.newname.getValue();b.ajaxPut("/bin/cpm/nodes/node.copy.json"+d,JSON.stringify({path:this.$node.val(),name:e}),{dataType:"json"},_.bind(function(a){$(document).trigger("path:inserted",[d,e]);this.hide()},this),_.bind(function(a){b.alert("danger","Error","Error on copying node",a)},this));return!1}});c.MoveNodeDialog=b.components.Dialog.extend({initialize:function(a){b.components.Dialog.prototype.initialize.apply(this,[a]);this.$form=
b.getWidget(this.el,"form.widget-form",b.components.FormWidget);this.$node=this.$('input[name="target-node"]');this.$path=this.$('input[name="path"]');this.$name=this.$('input[name="name"]');this.$index=this.$('input[name="index"]');this.$("button.move").click(_.bind(this.moveNode,this))},setNode:function(a){this.$node.val(a.path);this.$path.val(b.getParentPath(a.path));this.$name.val(a.name)},setValues:function(a,b,e){this.$node.val(a.path);this.$path.val(b.path);this.$name.val(a.name);this.$index.val(e)},
moveNode:function(a){a.preventDefault();if(this.$form.isValid()){var d=this.$node.val();a=this.$name.val();var e=this.$path.val(),c=this.$index.val();c||0==c||(c=-1);var f=b.buildContentPath(e,a);this.submitPUT("move node","/bin/cpm/nodes/node.move.json"+b.encodePath(d),{name:a,path:e,index:c},function(){$(document).trigger("path:moved",[d,f])})}else this.alert("danger","a valid target path and the node must be specified")}});c.RenameNodeDialog=b.components.Dialog.extend({initialize:function(a){b.components.Dialog.prototype.initialize.apply(this,
[a]);this.form=b.getWidget(this.el,"form.widget-form",b.components.FormWidget);this.$path=this.$('input[name="path"]');this.$name=this.$('input[name="name"]');this.$newname=b.getWidget(this.el,'input[name="newname"]',b.components.TextFieldWidget);this.$("button.rename").click(_.bind(this.renameNode,this));this.form.onsubmit=_.bind(this.renameNode,this);this.$el.on("shown.bs.modal",function(){$(this).find('input[name="newname"]').focus()})},reset:function(){b.components.Dialog.prototype.reset.apply(this)},
setNode:function(a,d){this.$path.val(b.getParentPath(a.path));this.$name.val(a.name);this.$newname.setValue(d?d:a.name)},renameNode:function(a){a.preventDefault();a=this.$path.val();var d=this.$name.val(),e=this.$newname.getValue(),c=b.buildContentPath(a,d),f=b.buildContentPath(a,e);b.ajaxPut("/bin/cpm/nodes/node.move.json"+c,JSON.stringify({name:e,path:a}),{dataType:"json"},_.bind(function(a){$(document).trigger("path:moved",[c,f]);this.hide()},this),_.bind(function(a){this.alert("danger","Error on renaming node",
a)},this));return!1}});c.DeleteNodeDialog=b.components.Dialog.extend({initialize:function(a){b.components.Dialog.prototype.initialize.apply(this,[a]);this.form=b.getWidget(this.el,"form.widget-form",b.components.FormWidget);this.path=b.getWidget(this.el,".path.path-widget",b.components.PathWidget);this.$smart=this.$("input.smart");this.$("button.delete").click(_.bind(this.deleteNode,this));this.form.onsubmit=_.bind(this.deleteNode,this);this.$el.on("shown.bs.modal",function(){$(this).find('input[name="path"]').focus()})},
show:function(a,d){this.doItSmart()?(this.initView=a,this.callback=d,this.onShown(),this.doItSmart()?this.deleteNode():this.$el.modal("show")):b.components.Dialog.prototype.show.apply(this,[a,d])},setPath:function(a){this.path.setValue(a)},deleteNode:function(a){a&&a.preventDefault();if(this.form.isValid()){var d=this.path.getValue();b.ajaxDelete("/bin/cpm/nodes/node.json"+b.encodePath(d),{},_.bind(function(a){$(document).trigger("path:deleted",[d]);this.hide()},this),_.bind(function(b){!a&&this.doItSmart()?
this.show(_.bind(function(){this.doAlert(b)},this),this.callback):this.doAlert(b)},this))}else this.alert("danger","a valid node path must be specified");return!1},doItSmart:function(){return this.$smart.prop("checked")},setSmart:function(a){this.$smart.prop("checked",a)},doAlert:function(a){this.alert("danger","Error on delete node!",a)}});c.UploadNodeDialog=b.components.Dialog.extend({initialize:function(a){b.components.Dialog.prototype.initialize.apply(this,[a]);this.$form=b.getWidget(this.el,
"form.widget-form",b.components.FormWidget);this.$panel=this.$(".form-panel");this.$path=this.$('input[name="path"]');this.$name=this.$('input[name="name"]');this.$file=this.$('input[name="file"]');this.$file.on("change.file",_.bind(this.fileChanged,this));this.$("button.upload").click(_.bind(this.uploadNode,this))},initDialog:function(a,b){this.$path.val(a);this.$name.val(b)},uploadNode:function(a){a.preventDefault();if(this.$form.isValid()){var b=this.$path.val(),c=this.$name.val();this.submitForm(function(){$(document).trigger("path:inserted",
[b,c])})}else this.alert("danger","a parent path and file must be specified");return!1},fileChanged:function(){var a=this.widgetOf(this.$file),b=this.widgetOf(this.$name);if((a=a.getValue())&&!b.getValue()){var c=/^(.*[\\\/])?([^\\\/]+)(\.json)$/.exec(a);c?b.setValue([c[2]]):(c=/^(.*[\\\/])?([^\\\/]+)$/.exec(a))&&b.setValue([c[2]])}}})})(b.nodes)})(window.core);
