var $jscomp={scope:{},findInternal:function(a,c,b){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(c.call(b,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,c,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[c]=b.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,c,b,d){if(c){b=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in b||(b[e]={});b=b[e]}a=a[a.length-1];d=b[a];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,b){return $jscomp.findInternal(this,a,b).v}},"es6-impl","es3");
(function(a){var c=function(a){this.init("checkbox",a,c.defaults)};a.fn.editableutils.inherit(c,a.fn.editabletypes.abstractinput);a.extend(c.prototype,{render:function(){this.$tpl.empty();a("<div>").append(a("<input>",{type:"checkbox"})).appendTo(this.$tpl);this.$input=this.$tpl.find('input[type="checkbox"]');this.setClass()},value2str:function(a){return a?"true":"false"},str2value:function(a){var b=!1;"string"===typeof a&&a.length&&(b="true"==a.toLowerCase());return b},value2input:function(a){this.$input.prop("checked",
void 0!==a&&a)},input2value:function(){var a=this.$input.prop("checked");return void 0!==a&&a},activate:function(){this.$input.focus()},autosubmit:function(){this.$input.on("keydown",function(b){13===b.which&&a(this).closest("form").submit()})}});c.defaults=a.extend({},a.fn.editabletypes.abstractinput.defaults,{tpl:'<div class="editable-checkbox"></div>',inputclass:null});a.fn.editabletypes.checkbox=c})(window.jQuery);
